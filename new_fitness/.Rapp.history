install.packages('knitr')
library(knitr)
?kint
?knit
install.package("glmulti")
install.packages("glmulti")
install.packages("relaimpo")
dat1 = read.csv("MarineData.Subset.csv")
dat1 = read.csv("data/MarineData.Subset.csv")
dat1 = read.csv("MarineData.Subset.csv")
n1<-10#
n2<-10#
m1<-1#
m2<-0#
x1<-rnorm(n1,mean=m1,sd=1)#
x2<-rnorm(n2,mean=m2,sd=1)#
x<-c(x1,x2)#
group<-c(rep(0,n1),rep(1,n2))
students<-t.test(x~group)#
stat<-students$statistic#
pvalue<-students$p.value
table(sample(group))#
P<-100#
tperm<-NULL#
for(p in 1:P){#
    tperm[p]<-t.test(x~sample(group))$statistic#
}#
permp<-mean(tperm>stat)
permp
stat
n1<-10#
n2<-10#
m1<-1#
m2<-0#
x1<-rnorm(n1,mean=m1,sd=1)#
x2<-rnorm(n2,mean=m2,sd=1)#
x<-c(x1,x2)
group<-c(rep(0,n1),rep(1,n2))#
#
# Student's T test#
students<-t.test(x~group)#
stat<-students$statistic#
pvalue<-students$p.value
stat
pvalue
table(sample(group))#
P<-100#
tperm<-NULL#
for(p in 1:P){#
    tperm[p]<-t.test(x~sample(group))$statistic#
}#
permp<-mean(tperm>stat)
table(group[sample(1:length(group),replace=TRUE)])#
B<-100#
tboot<-NULL#
for(b in 1:B){#
    bstrap<-sample(1:length(group),replace=TRUE)#
    tboot[b]<-t.test(x[bstrap]~group[bstrap])$statistic#
}#
bootp<-mean(tperm>stat)
table(group)
group
sample(group)
bootp
permp
table(sample(group))#
P<-1000#
tperm<-NULL#
for(p in 1:P){#
    tperm[p]<-t.test(x~sample(group))$statistic#
}#
permp<-mean(tperm>stat)
permp
table(sample(group))#
P<-100000#
tperm<-NULL#
for(p in 1:P){#
    tperm[p]<-t.test(x~sample(group))$statistic#
}#
permp<-mean(tperm>stat)
permp
table(group[sample(1:length(group),replace=TRUE)])#
B<-100#
tboot<-NULL#
for(b in 1:B){#
    bstrap<-sample(1:length(group),replace=TRUE)#
    tboot[b]<-t.test(x[bstrap]~group[bstrap])$statistic#
}#
bootp<-mean(tperm>stat)
bootp
table(group[sample(1:length(group),replace=TRUE)]) # sampling with replacement#
B<-100#
tboot<-NULL#
for(b in 1:B){#
    bstrap<-sample(1:length(group),replace=TRUE)#
    tboot[b]<-t.test(x[bstrap]~group[bstrap])$statistic#
}#
bootp<-mean(tboot>stat)
bootp
source("http://bioconductor.org/biocLite.R")
biocLite("DESeq")
# plotting matrices#
#
dat = read.csv("fitness_csv/Hydroxyurea_sub_DMSO_fitness.csv", header=FALSE, check.names=FALSE) # row.names = 1#
#
library("pheatmap")#
#
pheatmap(dat, cluster_rows=FALSE, cluster_cols=FALSE, main="HU - DMSO", show_colnames=TRUE )
# plotting matrices#
#
dat = read.csv("fitness_csv/Hydroxyurea_sub_DMSO_fitness.csv", header=FALSE, check.names=FALSE) # row.names = 1#
#
library("pheatmap")#
#
pheatmap(dat, cluster_rows=FALSE, cluster_cols=FALSE, main="HU - DMSO", show_colnames=TRUE )
# plotting matrices#
#
dat = read.csv("fitness_csv/Hydroxyurea_sub_DMSO_fitness.csv", header=FALSE, check.names=TRUE) # row.names = 1#
#
library("pheatmap")#
#
pheatmap(dat, cluster_rows=FALSE, cluster_cols=FALSE, main="HU - DMSO", show_colnames=TRUE )
dat_avg = colMeans(dat, na.rm=TRUE)#
#
library("ggplot2")#
#
dat_df = data.frame(data = dat_avg, pos = 1:77)#
#
ggplot(dat_df, aes(x=pos,y = data)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
dat_avg = colMeans(dat_mat, na.rm=TRUE)#
#
library("ggplot2")#
#
dat_df = data.frame(dat = dat_avg, pos = 1:77)#
#
ggplot(dat_df, aes(x=pos,y = dat)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
dat_avg = colMeans(dat_mat, na.rm=TRUE)
ting matrices#
#
dat_mat = read.csv("fitness_csv/Hydroxyurea_sub_DMSO_fitness.csv", header=FALSE, check.names=TRUE) # row.names = 1#
#
title = "HU - DMSO"#
#
library("pheatmap")#
#
pheatmap(dat_mat, cluster_rows=FALSE, cluster_cols=FALSE, main=title, show_colnames=TRUE )
dat_avg = colMeans(dat_mat, na.rm=TRUE)
library("ggplot2")
dat_df = data.frame(dat = dat_avg, pos = 1:77)
hist(dat_avg)
ggplot(dat_df, aes(x=pos,y = dat)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
dat_mat = read.csv("fitness_csv/Hydroxyurea_sub_Caffeine_fitness.csv", header=FALSE, check.names=TRUE) # row.names = 1#
#
title = "HU - Caffeine"#
#
library("pheatmap")#
#
pheatmap(dat_mat, cluster_rows=FALSE, cluster_cols=FALSE, main=title, show_colnames=TRUE )#
#
dat_avg = colMeans(dat_mat, na.rm=TRUE)
library("ggplot2")#
#
dat_df = data.frame(dat = dat_avg, pos = 1:77)#
#
ggplot(dat_df, aes(x=pos,y = dat)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
dat_mat = read.csv("fitness_csv/Hydroxyurea_sub_Caffeine_fitness.csv", header=FALSE, check.names=TRUE) # row.names = 1#
#
title = "HU - Caffeine"#
#
library("pheatmap")#
#
pheatmap(dat_mat, cluster_rows=FALSE, cluster_cols=FALSE, main=title, show_colnames=TRUE )
dat_avg = colMeans(dat_mat, na.rm=TRUE)#
#
library("ggplot2")#
#
dat_df = data.frame(dat = dat_avg, pos = 1:77)#
#
ggplot(dat_df, aes(x=pos,y = dat)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
# plotting matrices#
#
dat_mat = read.csv("fitness_csv/Hydroxyurea_sub_DMSO_fitness.csv", header=FALSE, check.names=TRUE) # row.names = 1#
#
title = "HU - DMSO"#
#
library("pheatmap")#
#
pheatmap(dat_mat, cluster_rows=FALSE, cluster_cols=FALSE, main=title, show_colnames=TRUE )
dat_avg = colMeans(dat_mat, na.rm=TRUE)#
#
library("ggplot2")#
#
dat_df = data.frame(dat = dat_avg, pos = 1:77)#
#
ggplot(dat_df, aes(x=pos,y = dat)) + geom_bar(stat="identity") +#
    ggtitle(title) + xlab("Position") + ylab("Average Fitness") + #
    scale_x_discrete(breaks = 1:77, label = c(1:77)) + #
    theme(axis.text=element_text(size=7), axis.title=element_text(size=12))
